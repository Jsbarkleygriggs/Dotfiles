###############
### General ###
###############

binds {
    movefocus_cycles_fullscreen = true
}

#lock on lid open/close
#bindl=,switch:on:Lid Switch, exec, hyprctl dispatch dpms off && hyprctl dispatch exec hyprlock
bindl=,switch:on:Lid Switch, exec, hyprlock
#bindl=,switch:off:Lid Switch, exec, hyprctl dispatch dpms on

$mainMod = SUPER_L

# Screenshot
bind = ALT, PRINT, exec, hyprshot -m window -m active -o ~/Pictures #$ hyprshot -m output --clipboard-only
bind = , PRINT, exec, hyprshot -m region -o ~/Pictures

# Clipboard
bind = $mainMod, V, exec, kitty --class clipse -e clipse

######################
### Special Action ###
######################

bind = $mainMod, Return, exec, $terminal
bind = $mainMod, C, killactive, #just closes
#bind = $mainMod, M, exit
bindl = SHIFT ALT, BACKSPACE, exit,
bind = $mainMod, BACKSPACE, exec, hyprlock
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, R, exec, $menu
#bind = $mainMod, Farwardslash, exec, walker --modules=ai
#bind = $mainMod, Farwardslash, exec, walker --modules=calc
#bind = $mainMod, Farwardslash, exec, walker --modules=websearch
#bind = $mainMod, Farwardslash, exec, walker --modules=finder
bind = $mainMod, SLASH, exec, walker --modules=windows

bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, END, exec, hyprctl kill
#bind = $ mainMod, tab,...

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
#bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

bindel = ,XF86MonBrightnessDown, exec, current_brightness=$(brightnessctl g); brightnessctl s $(( current_brightness - (current_brightness / 5) ))
#bindel = ,XF86MonBrightnessDown, exec, current_brightness=$(brightnessctl g); brightnessctl s $(( current_brightness * (1/2) ))
# zshell is hating multiplication beacuse intigers vs floats. use awk

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous


###########
### Nav ###
###########

$LEFT = h
$RIGHT = l
$UP = k
$DOWN = j

#hold alt to pass vim keys as arrow keys
bind = ALT, $LEFT, sendshortcut,,left,
bind = ALT, $RIGHT, sendshortcut,,right,
bind = ALT, $UP, sendshortcut,,up,
bind = ALT, $DOWN, sendshortcut,,down,

bind = $mainMod ALT, $LEFT, exec, hyprctl --batch "keyword binds:movefocus_cycles_groupfirst true ; dispatch movefocus l ; keyword binds:movefocus_cycles_groupfirst false"
bind = $mainMod ALT, $RIGHT, exec, hyprctl --batch "keyword binds:movefocus_cycles_groupfirst true ; dispatch movefocus r ; keyword binds:movefocus_cycles_groupfirst false"

bind = $mainMod, $LEFT, movefocus, l
bind = $mainMod, $RIGHT, movefocus, r
bind = $mainMod, $UP, movefocus, u
bind = $mainMod, $DOWN, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10


#########################
### Window Management ###
#########################

bind = $mainMod SHIFT, F, togglefloating,
bind = $mainMod, N, togglesplit, # dwindle

# Tab behaviour
bind = $mainMod SHIFT, $LEFT, moveintogroup, l
#bind = $mainMod, T, hy3:changegroup, toggletab
bind = $mainMod, T, togglegroup

# Move active window to a workspace with mainMod + SHIFT + [0-9]
## To handle the 'tabbed' case. (Default begaviour moves all tabs in a window)
bind = $mainMod SHIFT, 1, moveoutofgroup, active
bind = $mainMod SHIFT, 2, moveoutofgroup, active
bind = $mainMod SHIFT, 3, moveoutofgroup, active
bind = $mainMod SHIFT, 4, moveoutofgroup, active
bind = $mainMod SHIFT, 5, moveoutofgroup, active
bind = $mainMod SHIFT, 6, moveoutofgroup, active
bind = $mainMod SHIFT, 7, moveoutofgroup, active
bind = $mainMod SHIFT, 8, moveoutofgroup, active
bind = $mainMod SHIFT, 9, moveoutofgroup, active
bind = $mainMod SHIFT, 0, moveoutofgroup, active

bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Move Windows around
## move the window
bind = $mainMod SHIFT, $LEFT, movewindoworgroup, l
bind = $mainMod SHIFT, $RIGHT, movewindoworgroup, r
bind = $mainMod SHIFT, $UP, movewindoworgroup, u
bind = $mainMod SHIFT, $DOWN, movewindoworgroup, d

#binds = $mainMod, SPACE&$DOWN, movewindoworgroup, d
#bind = $mainMod ALT, $LEFT, movewindoworgroup, l
#bind = $mainMod ALT, $RIGHT, movewindoworgroup, r
#bind = $mainMod ALT, $UP, movewindoworgroup, u
#bind = $mainMod ALT, $DOWN, movewindoworgroup, d

#bind = $mainMod SHIFT, $LEFT, hy3:movewindow, l
#bind = $mainMod SHIFT, $RIGHT, hy3:movewindow, r
#bind = $mainMod SHIFT, $UP, hy3:movewindow, u
#bind = $mainMod SHIFT, $DOWN, hy3:movewindow, d

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = ALT, mouse:272, movewindow
bindm = ALT, mouse:273, resizewindow

bind = $mainMod, F, fullscreen, 1
bind = $mainMod, F11, fullscreen, 0
bind = $mainMod ALT, F, fullscreenstate, -1 2

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Workspace for storing background/minimised shit
bind = $mainMod, B, togglespecialworkspace, background
bind = $mainMod, MINUS, movetoworkspacesilent, special:background
bind = $mainMod, MINUS, movetoworkspace, +0

#bind = $manMod Alt, MINUS, general:layout, master

#bind = $mainMod, MINUS, togglespecialworkspace, background
#bind = $mainMod, MINUS, movetoworkspacesilent, special:background
#bind = $mainMod, MINUS, submap, background
#
#submap = background
#    bind = $mainMod, RETURN, movetoworkspace, +0
#    bind = $mainMod, MINUS, movetoworkspace, +0
#
#    bindr = $mainMod, MINUS, submap, reset
#
#submap = reset

#windowrulev2 = float, focus:1, workspace:background
#windowrulev2 = center, focus:1, workspace:background
#windowrulev2 = ,focus:0, workspace:background

# create a background workspace
# 2 allow me to view all windows in equal size and/or cycle through them being the biggest


# On one workspace add Custom reserved area:
#       monitor = name, addreserved, TOP, BOTTOM, LEFT, RIGHT
#
#

#bind = SUPER, Tab, cyclenext,           # change focus to another window
#bind = SUPER, Tab, bringactivetotop,    # bring it to the top



#
#setfloating
#centerwindow
#cyclenext also try swapnext
#
#swapwindow
#moveactive
#moveintogroup
#movewindoworgroup
#
#setprop

# to switch between windows in a floating workspace
#bind = SUPER, Tab, cyclenext,           # change focus to another window
#bind = SUPER, Tab, bringactivetotop,    # bring it to the top



# Make CapsLock (remaped to leftmeta externally) be mod and escape :)
#bind = , Super_L, sendshortcut,,Escape,
#removed bc anoyences. replaced by /etc/keyd/default.conf:
#[ids]
#*
#
#[main]
#capslock = overload(capslock_layer, esc)

#[capslock_layer]
#space = leftshift
#* = macro(leftmeta $)
#and besides, now all remaps are localized in one file

